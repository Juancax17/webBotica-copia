// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using webBotica2.Models;

#nullable disable

namespace webBotica2.Migrations
{
    [DbContext(typeof(MiAngelitoContext))]
    [Migration("20250717014900_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("webBotica2.Models.Categorium", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_categoria");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdCategoria"));

                    b.Property<bool>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("estado");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nombre");

                    b.HasKey("IdCategoria")
                        .HasName("PK__Categori__CD54BC5ADAE8E0AF");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("webBotica2.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_cliente");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("ApellidoMaterno")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("apellidoMaterno");

                    b.Property<string>("ApellidoPaterno")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("apellidoPaterno");

                    b.Property<string>("Correo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("correo");

                    b.Property<string>("Direccion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("direccion");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("character(12)")
                        .HasColumnName("documento")
                        .IsFixedLength();

                    b.Property<bool>("EsRegistrado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("es_registrado");

                    b.Property<bool>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("estado");

                    b.Property<DateOnly?>("FechaNac")
                        .HasColumnType("date")
                        .HasColumnName("fecha_nac");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nombre");

                    b.Property<string>("Telefono")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("character(9)")
                        .HasColumnName("telefono")
                        .IsFixedLength();

                    b.HasKey("IdCliente")
                        .HasName("PK__Clientes__677F38F5C57E73F3");

                    b.HasIndex(new[] { "Documento" }, "UQ__Clientes__A25B3E612859D9E9")
                        .IsUnique();

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("webBotica2.Models.Compra", b =>
                {
                    b.Property<int>("IdCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_compra");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdCompra"));

                    b.Property<string>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("character varying(20)")
                        .HasDefaultValue("Registrado")
                        .HasColumnName("estado");

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date")
                        .HasColumnName("fecha");

                    b.Property<int?>("IdProveedor")
                        .HasColumnType("integer")
                        .HasColumnName("id_proveedor");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("integer")
                        .HasColumnName("id_usuario");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("total");

                    b.HasKey("IdCompra")
                        .HasName("PK__Compras__C4BAA604E806B1EC");

                    b.HasIndex("IdProveedor");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("webBotica2.Models.Comprobante", b =>
                {
                    b.Property<int>("IdComprobante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_comprobante");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdComprobante"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("character varying(20)")
                        .HasDefaultValue("Emitido")
                        .HasColumnName("estado");

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date")
                        .HasColumnName("fecha");

                    b.Property<int?>("IdVenta")
                        .HasColumnType("integer")
                        .HasColumnName("id_venta");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("numero");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("tipo");

                    b.HasKey("IdComprobante")
                        .HasName("PK__Comproba__55E5E2403CAF26AF");

                    b.HasIndex("IdVenta");

                    b.ToTable("Comprobantes");
                });

            modelBuilder.Entity("webBotica2.Models.DetalleCompra", b =>
                {
                    b.Property<int>("IdDetalleCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_detalle_compra");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdDetalleCompra"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("integer")
                        .HasColumnName("cantidad");

                    b.Property<int?>("IdCompra")
                        .HasColumnType("integer")
                        .HasColumnName("id_compra");

                    b.Property<int?>("IdProd")
                        .HasColumnType("integer")
                        .HasColumnName("id_prod");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("precio_unitario");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("subtotal");

                    b.HasKey("IdDetalleCompra")
                        .HasName("PK__Detalle___BD16E279951E0C9D");

                    b.HasIndex("IdCompra");

                    b.HasIndex("IdProd");

                    b.ToTable("Detalle_Compra", (string)null);
                });

            modelBuilder.Entity("webBotica2.Models.DetalleVentum", b =>
                {
                    b.Property<int>("IdDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_detalle");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdDetalle"));

                    b.Property<int>("Cant")
                        .HasColumnType("integer")
                        .HasColumnName("cant");

                    b.Property<int?>("IdProd")
                        .HasColumnType("integer")
                        .HasColumnName("id_prod");

                    b.Property<int?>("IdVenta")
                        .HasColumnType("integer")
                        .HasColumnName("id_venta");

                    b.Property<decimal>("PrecioVenta")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("precio_venta");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("subtotal");

                    b.HasKey("IdDetalle")
                        .HasName("PK__Detalle___4F1332DEEC7276F0");

                    b.HasIndex("IdProd");

                    b.HasIndex("IdVenta");

                    b.ToTable("Detalle_Venta", (string)null);
                });

            modelBuilder.Entity("webBotica2.Models.Devolucione", b =>
                {
                    b.Property<int>("IdDevolucion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_devolucion");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdDevolucion"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("integer")
                        .HasColumnName("cantidad");

                    b.Property<string>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("character varying(20)")
                        .HasDefaultValue("Pendiente")
                        .HasColumnName("estado");

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date")
                        .HasColumnName("fecha");

                    b.Property<int?>("IdProd")
                        .HasColumnType("integer")
                        .HasColumnName("id_prod");

                    b.Property<int?>("IdVenta")
                        .HasColumnType("integer")
                        .HasColumnName("id_venta");

                    b.Property<string>("Motivo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("motivo");

                    b.HasKey("IdDevolucion")
                        .HasName("PK__Devoluci__0BBAEF8D50B82509");

                    b.HasIndex("IdProd");

                    b.HasIndex("IdVenta");

                    b.ToTable("Devoluciones");
                });

            modelBuilder.Entity("webBotica2.Models.HistorialVencimiento", b =>
                {
                    b.Property<int>("IdVencimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_vencimiento");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdVencimiento"));

                    b.Property<bool>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("estado");

                    b.Property<DateOnly>("FechaVen")
                        .HasColumnType("date")
                        .HasColumnName("fecha_ven");

                    b.Property<int?>("IdProd")
                        .HasColumnType("integer")
                        .HasColumnName("id_prod");

                    b.HasKey("IdVencimiento")
                        .HasName("PK__Historia__3A5DE40C5DD32FAF");

                    b.HasIndex("IdProd");

                    b.ToTable("Historial_Vencimiento", (string)null);
                });

            modelBuilder.Entity("webBotica2.Models.Laboratorio", b =>
                {
                    b.Property<int>("IdLaboratorio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_laboratorio");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdLaboratorio"));

                    b.Property<string>("Correo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("correo");

                    b.Property<string>("Direccion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("direccion");

                    b.Property<bool>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("estado");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nombre");

                    b.Property<string>("Ruc")
                        .IsRequired()
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("character(11)")
                        .HasColumnName("ruc")
                        .IsFixedLength();

                    b.Property<string>("Telefono")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("character(9)")
                        .HasColumnName("telefono")
                        .IsFixedLength();

                    b.HasKey("IdLaboratorio")
                        .HasName("PK__Laborato__781B42E237B99CF8");

                    b.HasIndex(new[] { "Ruc" }, "UQ__Laborato__C2B74E611CFCDC5B")
                        .IsUnique();

                    b.ToTable("Laboratorio", (string)null);
                });

            modelBuilder.Entity("webBotica2.Models.Marca", b =>
                {
                    b.Property<int>("IdMarca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_marca");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdMarca"));

                    b.Property<bool>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("estado");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nombre");

                    b.HasKey("IdMarca")
                        .HasName("PK__Marca__7E43E99E7EEDEA8B");

                    b.ToTable("Marca", (string)null);
                });

            modelBuilder.Entity("webBotica2.Models.ParametrosGenerales", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DiasVencimientoMinima")
                        .HasColumnType("integer")
                        .HasColumnName("dias_vencimiento_minima");

                    b.Property<decimal>("GananciaMinimaAnual")
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("ganancia_minima_anual");

                    b.Property<decimal>("GananciaMinimaMensual")
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("ganancia_minima_mensual");

                    b.Property<decimal>("Igv")
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("igv");

                    b.Property<byte[]>("LogoSistema")
                        .HasColumnType("bytea")
                        .HasColumnName("logo_sistema");

                    b.Property<string>("NombreEmporesa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nombre_empresa");

                    b.Property<bool>("modoOscuro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("modo_oscuro");

                    b.Property<string>("ruc")
                        .IsRequired()
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("ruc");

                    b.HasKey("Id");

                    b.ToTable("ParametrosGenerales");
                });

            modelBuilder.Entity("webBotica2.Models.Producto", b =>
                {
                    b.Property<int>("IdProd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_prod");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdProd"));

                    b.Property<bool>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("estado");

                    b.Property<DateOnly>("FechaVen")
                        .HasColumnType("date")
                        .HasColumnName("fecha_ven");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("bytea")
                        .HasColumnName("foto");

                    b.Property<int?>("IdCategoria")
                        .HasColumnType("integer")
                        .HasColumnName("id_categoria");

                    b.Property<int?>("IdLaboratorio")
                        .HasColumnType("integer")
                        .HasColumnName("id_laboratorio");

                    b.Property<int?>("IdMarca")
                        .HasColumnType("integer")
                        .HasColumnName("id_marca");

                    b.Property<int?>("IdProveedor")
                        .HasColumnType("integer")
                        .HasColumnName("id_proveedor");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nombre");

                    b.Property<decimal>("PrecioCompra")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("precio_compra");

                    b.Property<decimal>("PrecioVenta")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("precio_venta");

                    b.Property<string>("Presentacion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("presentacion");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("character(10)")
                        .HasColumnName("sku")
                        .IsFixedLength();

                    b.Property<int>("Stock")
                        .HasColumnType("integer")
                        .HasColumnName("stock");

                    b.Property<int>("StockMinimo")
                        .HasColumnType("integer")
                        .HasColumnName("stockMinimo");

                    b.HasKey("IdProd")
                        .HasName("PK__Producto__0DA348730FC5C438");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdLaboratorio");

                    b.HasIndex("IdMarca");

                    b.HasIndex("IdProveedor");

                    b.ToTable("Producto", (string)null);
                });

            modelBuilder.Entity("webBotica2.Models.Proveedore", b =>
                {
                    b.Property<int>("IdProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_proveedor");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdProveedor"));

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("correo");

                    b.Property<bool>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("estado");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("razon_social");

                    b.Property<string>("Ruc")
                        .IsRequired()
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("character(11)")
                        .HasColumnName("ruc")
                        .IsFixedLength();

                    b.Property<string>("Telefono")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("character(9)")
                        .HasColumnName("telefono")
                        .IsFixedLength();

                    b.HasKey("IdProveedor")
                        .HasName("PK_Proveedor");

                    b.HasIndex(new[] { "Ruc" }, "UQ_Proveedor_RUC")
                        .IsUnique();

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("webBotica2.Models.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_rol");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdRol"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("descripcion");

                    b.Property<bool>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("estado");

                    b.Property<string>("Rol1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("rol");

                    b.HasKey("IdRol")
                        .HasName("PK__Rol__6ABCB5E03526DA8F");

                    b.ToTable("Rol", (string)null);
                });

            modelBuilder.Entity("webBotica2.Models.Usuario", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_user");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdUser"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("apellido");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("contraseña");

                    b.Property<bool>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("estado");

                    b.Property<int?>("IdRol")
                        .HasColumnType("integer")
                        .HasColumnName("id_rol");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nombre");

                    b.Property<string>("Usuario1")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("usuario");

                    b.HasKey("IdUser")
                        .HasName("PK__Usuarios__D2D146374D944449");

                    b.HasIndex("IdRol");

                    b.HasIndex(new[] { "Usuario1" }, "UQ__Usuarios__9AFF8FC6F57D6012")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("webBotica2.Models.Venta", b =>
                {
                    b.Property<int>("IdVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_venta");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdVenta"));

                    b.Property<string>("EstadoVenta")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("character varying(20)")
                        .HasDefaultValue("Pendiente")
                        .HasColumnName("estado_venta");

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date")
                        .HasColumnName("fecha");

                    b.Property<int?>("IdCliente")
                        .HasColumnType("integer")
                        .HasColumnName("id_cliente");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("total");

                    b.HasKey("IdVenta")
                        .HasName("PK__Ventas__459533BF74DFBDA5");

                    b.HasIndex("IdCliente");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("webBotica2.Models.Compra", b =>
                {
                    b.HasOne("webBotica2.Models.Proveedore", "IdProveedorNavigation")
                        .WithMany("Compras")
                        .HasForeignKey("IdProveedor")
                        .HasConstraintName("FK__Compras__id_prov__60A75C0F");

                    b.HasOne("webBotica2.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Compras")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK__Compras__id_usua__619B8048");

                    b.Navigation("IdProveedorNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("webBotica2.Models.Comprobante", b =>
                {
                    b.HasOne("webBotica2.Models.Venta", "IdVentaNavigation")
                        .WithMany("Comprobantes")
                        .HasForeignKey("IdVenta")
                        .HasConstraintName("FK__Comproban__id_ve__6E01572D");

                    b.Navigation("IdVentaNavigation");
                });

            modelBuilder.Entity("webBotica2.Models.DetalleCompra", b =>
                {
                    b.HasOne("webBotica2.Models.Compra", "IdCompraNavigation")
                        .WithMany("DetalleCompras")
                        .HasForeignKey("IdCompra")
                        .HasConstraintName("FK__Detalle_C__id_co__6477ECF3");

                    b.HasOne("webBotica2.Models.Producto", "IdProdNavigation")
                        .WithMany("DetalleCompras")
                        .HasForeignKey("IdProd")
                        .HasConstraintName("FK__Detalle_C__id_pr__656C112C");

                    b.Navigation("IdCompraNavigation");

                    b.Navigation("IdProdNavigation");
                });

            modelBuilder.Entity("webBotica2.Models.DetalleVentum", b =>
                {
                    b.HasOne("webBotica2.Models.Producto", "IdProdNavigation")
                        .WithMany("DetalleVenta")
                        .HasForeignKey("IdProd")
                        .HasConstraintName("FK__Detalle_V__id_pr__5BE2A6F2");

                    b.HasOne("webBotica2.Models.Venta", "IdVentaNavigation")
                        .WithMany("DetalleVenta")
                        .HasForeignKey("IdVenta")
                        .HasConstraintName("FK__Detalle_V__id_ve__5CD6CB2B");

                    b.Navigation("IdProdNavigation");

                    b.Navigation("IdVentaNavigation");
                });

            modelBuilder.Entity("webBotica2.Models.Devolucione", b =>
                {
                    b.HasOne("webBotica2.Models.Producto", "IdProdNavigation")
                        .WithMany("Devoluciones")
                        .HasForeignKey("IdProd")
                        .HasConstraintName("FK__Devolucio__id_pr__6A30C649");

                    b.HasOne("webBotica2.Models.Venta", "IdVentaNavigation")
                        .WithMany("Devoluciones")
                        .HasForeignKey("IdVenta")
                        .HasConstraintName("FK__Devolucio__id_ve__693CA210");

                    b.Navigation("IdProdNavigation");

                    b.Navigation("IdVentaNavigation");
                });

            modelBuilder.Entity("webBotica2.Models.HistorialVencimiento", b =>
                {
                    b.HasOne("webBotica2.Models.Producto", "IdProdNavigation")
                        .WithMany("HistorialVencimientos")
                        .HasForeignKey("IdProd")
                        .HasConstraintName("FK__Historial__id_pr__4CA06362");

                    b.Navigation("IdProdNavigation");
                });

            modelBuilder.Entity("webBotica2.Models.Producto", b =>
                {
                    b.HasOne("webBotica2.Models.Categorium", "IdCategoriaNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdCategoria")
                        .HasConstraintName("FK__Producto__id_cat__47DBAE45");

                    b.HasOne("webBotica2.Models.Laboratorio", "IdLaboratorioNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdLaboratorio")
                        .HasConstraintName("FK__Producto__id_lab__produc");

                    b.HasOne("webBotica2.Models.Marca", "IdMarcaNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdMarca")
                        .HasConstraintName("FK__Producto__id_mar__48CFD27E");

                    b.HasOne("webBotica2.Models.Proveedore", "IdProveedorNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdProveedor")
                        .HasConstraintName("FK__Producto__id_pro__46E78A0C");

                    b.Navigation("IdCategoriaNavigation");

                    b.Navigation("IdLaboratorioNavigation");

                    b.Navigation("IdMarcaNavigation");

                    b.Navigation("IdProveedorNavigation");
                });

            modelBuilder.Entity("webBotica2.Models.Usuario", b =>
                {
                    b.HasOne("webBotica2.Models.Rol", "IdRolNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .HasConstraintName("FK_USUARIOS_ROL");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("webBotica2.Models.Venta", b =>
                {
                    b.HasOne("webBotica2.Models.Cliente", "IdClienteNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("IdCliente")
                        .HasConstraintName("FK__Ventas__id_clien__59063A47");

                    b.Navigation("IdClienteNavigation");
                });

            modelBuilder.Entity("webBotica2.Models.Categorium", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("webBotica2.Models.Cliente", b =>
                {
                    b.Navigation("Venta");
                });

            modelBuilder.Entity("webBotica2.Models.Compra", b =>
                {
                    b.Navigation("DetalleCompras");
                });

            modelBuilder.Entity("webBotica2.Models.Laboratorio", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("webBotica2.Models.Marca", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("webBotica2.Models.Producto", b =>
                {
                    b.Navigation("DetalleCompras");

                    b.Navigation("DetalleVenta");

                    b.Navigation("Devoluciones");

                    b.Navigation("HistorialVencimientos");
                });

            modelBuilder.Entity("webBotica2.Models.Proveedore", b =>
                {
                    b.Navigation("Compras");

                    b.Navigation("Productos");
                });

            modelBuilder.Entity("webBotica2.Models.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("webBotica2.Models.Usuario", b =>
                {
                    b.Navigation("Compras");
                });

            modelBuilder.Entity("webBotica2.Models.Venta", b =>
                {
                    b.Navigation("Comprobantes");

                    b.Navigation("DetalleVenta");

                    b.Navigation("Devoluciones");
                });
#pragma warning restore 612, 618
        }
    }
}
